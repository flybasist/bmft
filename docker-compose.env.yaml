version: "3.9"

networks:
  botnet:
    name: botnet  # используем постоянное имя сети

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - botnet
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      botnet:
        aliases:
          - kafka
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nc -z kafka 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  postgresql:
    image: postgres:16
    environment:
      POSTGRES_DB: bmft
      POSTGRES_USER: bmft
      POSTGRES_PASSWORD: bmft
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - botnet
    restart: unless-stopped
    stop_grace_period: 10s

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      CMD_ARGS: "--message.sendEnabled=true"
    depends_on:
      - kafka
    networks:
      - botnet
    restart: unless-stopped