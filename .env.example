# ==================================
# BMFT Bot Configuration
# ==================================

# Обязательные параметры
# -----------------------

# Токен Telegram-бота (получить у @BotFather)
TELEGRAM_BOT_TOKEN=123456789:ABCdefGHIjklMNOpqrsTUVwxyz

# Строка подключения к PostgreSQL
# Формат: postgres://user:password@host:port/database?sslmode=disable
# 
# ЛОКАЛЬНАЯ ОТЛАДКА (go run): используй @localhost (БД в docker-compose.env.yaml)
POSTGRES_DSN=postgres://bmft:secret@localhost:5432/bmft?sslmode=disable
#
# БОТ В DOCKER: используй @postgres (БД и бот в одной Docker сети)
# POSTGRES_DSN=postgres://bmft:secret@postgres:5432/bmft?sslmode=disable
#
# ВНЕШНЯЯ БД (production): укажи реальный хост
# POSTGRES_DSN=postgres://user:password@remote-host:5432/bmft?sslmode=require


# Опциональные параметры
# -----------------------

# Уровень логирования: debug, info, warn, error (default: info)
LOG_LEVEL=info

# Pretty-print логов для разработки (default: false)
# В production рекомендуется false для JSON-логов
LOGGER_PRETTY=false

# Таймаут graceful shutdown в секундах (default: 15s)
SHUTDOWN_TIMEOUT=15s

# Адрес HTTP-сервера метрик (default: :9090)
# Endpoints: /healthz, /metrics
METRICS_ADDR=:9090

# Таймаут Long Polling в секундах (default: 60)
# Рекомендуемое значение: 30-60
POLLING_TIMEOUT=60


# Параметры для production
# ------------------------

# Для production установите:
# LOG_LEVEL=warn
# LOGGER_PRETTY=false
# POSTGRES_DSN с sslmode=require (если поддерживается)

# Пример production конфигурации:
# TELEGRAM_BOT_TOKEN=<production-token>
# POSTGRES_DSN=postgres://bmft:strong_password@db.example.com:5432/bmft?sslmode=require
# LOG_LEVEL=warn
# LOGGER_PRETTY=false
# SHUTDOWN_TIMEOUT=30s