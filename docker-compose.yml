version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    restart: unless-stopped

  postgresql:
    image: postgres:16
    environment:
      POSTGRES_DB: bmft
      POSTGRES_USER: bmft
      POSTGRES_PASSWORD: bmft
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    stop_grace_period: 10s

  kafka-init:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      echo 'Waiting for Kafka to be ready...';
      sleep 10;
      kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic telegram-listener;
      kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic telegram-send;
      kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic telegram-delete;
      echo 'Kafka topics created';
    restart: "no"

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      CMD_ARGS: "--message.sendEnabled=true"
    depends_on:
      - kafka
    restart: unless-stopped

  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile.telegram_bot
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - kafka
      - kafka-init
      - postgresql
    restart: unless-stopped